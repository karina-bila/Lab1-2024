<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>