<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAT0AAABXCAYAAAB2g5IVAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wQAADsEBuJFr7QAAHvtJREFUeF7t3QeULEUZBeAnORgAJWcEHhlUVBBBQJKoKKKSBFFAUBEkiYKABJGg
        EgyIqEQJgoJEIwKCIiaQpCgYUFHMOVue73eK16+Z2Zndnd2d2a57zpy3r2emp7q66tb9U/WMVFBQUNAg
        FNIrKChoFArptfCf//wn/fe//239r6CgYLqi0aT397//Pf3whz9Mt9xyS/rEJz4RfxcUFExvNJb0fve7
        36Wzzz477bvvvumEE04I4vvHP/7ReregoGC6opGk9+c//zm99a1vTZtvvnm68sor05/+9KfWOwUFBdMd
        jSS9yy67LC2++OLp4osvTv/85z9bR6c/+C2vvvrq9IY3vCHtv//+6Utf+lL617/+1Xq3oKAZaBzpUXkv
        e9nL0pZbbpn+8pe/tI42Ax/96EfT8ssvnzbbbLO01FJLpac85Snp+uuvb71bUNAMNI70vve976V11lkn
        vec972kdaQZ+9atfpWOOOSY98sgjEaX+6le/mtZff/30ohe9qKi9gkahcaQnYLHSSiulq666qnWkGRC4
        eeihh1r/S6FymbmbbLJJ+utf/9o6WlAw/dE40vvkJz+Zll122XTddde1jjQTiO5Nb3pTOuCAA8LXV1DQ
        FDSO9E4//fS00EILpfPPP791pJn4wQ9+kPbcc8902223tY4UFIwextFRRx2VPvaxjw1NULBxpPfud787
        PfGJT0znnntu60jzIB/RIJWn+Le//a11tKCgd/z4xz9OhxxySAiIBRdcMB1xxBFDk+daSK9h+Pe//52+
        8pWvpA984APp5z//eetoQUFvEAS766670nHHHZd23XXXNP/888erkN4Ao8mkZ8DecccdofC+//3vxzEm
        yW9/+9v4u6BgNHj44YcjE6KQ3oCjqaSH8G699db0ute9Lr3//e9Pn/3sZyOYw8d58803tz5VUNA7/vjH
        P6aNN964kN6go6mkh9ie8YxnhA9GgvIKK6yQlltuubT22munBx54oPWpgmHFb37zm3TBBReE62KydgtS
        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
</value>
  </data>
</root>